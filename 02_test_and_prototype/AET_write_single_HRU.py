# ---
# jupyter:
#   jupytext:
#     formats: ipynb,py:percent
#     text_representation:
#       extension: .py
#       format_name: percent
#       format_version: '1.3'
#       jupytext_version: 1.13.7
#   kernelspec:
#     display_name: Python 2
#     language: python
#     name: python2
# ---

# %%
import pandas as pd
import numpy as np
import datetime

# %%
regions = ['01', '02', '03', '04', '05', '06', '07', '08',
           '09', '10l', '10u', '11', '12', '13', '14', '15',
           '16', '17', '18']

hrus_by_region = [2462, 4827, 9899, 5936, 7182, 2303, 8205, 4449, 
                  1717, 8603, 10299, 7373, 7815, 1958, 3879, 3441,
                  2664, 11102, 5837]

print 'Total Regions:', len(regions)
print 'Total HRUs:', sum(hrus_by_region)

print 'starting index for region 10U:', sum(hrus_by_region[0:regions.index('10u')])

# %%
workdir = '/Users/pnorton/USGS/Projects/National_Hydrology_Model/regions/r10U/error_bounds/AET'
st = datetime.datetime(2000,1,1)
en = datetime.datetime(2010,12,31)


# NOTE: These AET files were generated by Paul Micheletty and used units of mm

# %% [markdown]
# #Process MOD16 AET

# %%
file1 = 'MOD16.CONUS'
missing = [-9999.0]

ds1 = pd.read_csv('%s/%s' % (workdir, file1), sep=' ', skipinitialspace=True, na_values=missing)
#ds1.head()

# %%
# Transpose the dataframe: dates on rows, hrus on columns
ds1b = ds1.unstack().unstack()

ds1b.reset_index(inplace=True)
ds1b['thedate'] = pd.to_datetime(ds1b.ix[:,0], format='%Y.%m')
ds1b.set_index(['thedate'], inplace=True)
ds1b.drop(['index'], axis=1, inplace=True)

# Monthly values are aligned at the start of the month, change to the end of the month
ds1c = ds1b.resample('M', how='mean')

# Make the HRU column labels one-based
ds1c.rename(columns=lambda x: ds1c.columns.get_loc(x)+1, inplace=True)
ds1c.head()

aet_mod16 = ds1c[st:en]

# %% [markdown]
# #Process SSEBop AET

# %%
file3 = 'SSEBop.CONUS'
missing = [-9999.0]

ds3 = pd.read_csv('%s/%s' % (workdir, file3), sep=' ', skipinitialspace=True, na_values=missing)
#ds3.head()

# %%
# Transpose the dataframe: dates on rows, hrus on columns
ds3b = ds3.unstack().unstack()

ds3b.reset_index(inplace=True)
ds3b['thedate'] = pd.to_datetime(ds3b.ix[:,0], format='%Y.%m')
ds3b.set_index(['thedate'], inplace=True)
ds3b.drop(['index'], axis=1, inplace=True)

# Monthly values are aligned at the start of the month, change to the end of the month
ds3c = ds3b.resample('M', how='mean')

# Make the HRU column labels one-based
ds3c.rename(columns=lambda x: ds3c.columns.get_loc(x)+1, inplace=True)
ds3c.head()

aet_SSEBop = ds3c[st:en]

# %% [markdown]
# #Process MWBM files

# %%
file2 = 'MWBM.CONUS'
ds2 = pd.read_csv('%s/%s' % (workdir, file2), sep=' ', skipinitialspace=True, 
                  na_values=missing)
#ds2.head()

ds2b = ds2.unstack().unstack()
#ds2b.head()

# %%
ds2c = ds2b.reset_index()

# The MWBM data doesn't provide the datetime information for some reason
# Create a range from 1949-1 to 2010-12, add it to the dataframe, 
# and make it the index
rng = pd.date_range('1/1/1949', periods=744, freq='M')

ds2c['thedate'] = rng
ds2c.set_index(['thedate'], inplace=True)
ds2c.drop(['index'], axis=1, inplace=True)

# Make the HRU column labels one-based
ds2c.rename(columns=lambda x: ds2c.columns.get_loc(x)+1, inplace=True)
ds2c.head()

aet_mwbm = ds2c[st:en]

# %%
print aet_mod16.head()
print aet_SSEBop.head()
print aet_mwbm.head()

# %% [markdown]
# ###Retrieve single HRU from each input model

# %%
hru_index = 1

modis_ss = pd.DataFrame(aet_mod16.ix[:,hru_index])
modis_ss.rename(columns={modis_ss.columns[0]: 'modis'}, inplace=True)

ssebop_ss = pd.DataFrame(aet_SSEBop.ix[:,hru_index])
ssebop_ss.rename(columns={ssebop_ss.columns[0]: 'ssebop'}, inplace=True)

mwbm_ss = pd.DataFrame(aet_mwbm.ix[:,hru_index])
mwbm_ss.rename(columns={mwbm_ss.columns[0]: 'mwbm'}, inplace=True)

# Join modis, ssebop, and mwbm together
ds_join = modis_ss.join(ssebop_ss, how='outer')
ds_join = ds_join.join(mwbm_ss, how='outer')
#print ds_join.head()

ds_join['min'] = ds_join.min(axis=1)
ds_join['max'] = ds_join.max(axis=1)
ds_join.drop(['modis', 'ssebop', 'mwbm'], axis=1, inplace=True)
ds_join['year'] = ds_join.index.year
ds_join['month'] = ds_join.index.month
ds_join.reset_index(inplace=True)
ds_join.drop(['thedate'], axis=1, inplace=True)
ds_join.to_csv('crap.aet', sep=' ', float_format='%0.5f', columns=['year', 'month', 'min', 'max'], 
               header=False, index=False)
print ds_join.head()

# %%
